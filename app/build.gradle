plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

apply from: "$rootDir/dependencies.gradle"
apply from: "$rootDir/spotless.gradle"

android {
    compileSdk versions.compileSdk

    defaultConfig {
        applicationId "com.iuturakulov.uzbarchitecture_ar"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions.freeCompilerArgs += ["-opt-in=kotlin.time.ExperimentalTime"]
        kotlinOptions.freeCompilerArgs += ["-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"]
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // Room
    implementation "androidx.room:room-runtime:$versions.roomVersion"
    implementation "androidx.room:room-ktx:$versions.roomVersion"
    kapt "androidx.room:room-compiler:$versions.roomVersion"

    // Scalable sp
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    implementation platform('com.google.firebase:firebase-bom:30.2.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation "com.github.skydoves:sandwich:1.2.7"

    // Android supports
    implementation "com.google.android.material:material:$versions.materialVersion"

    // Architecture components
    implementation "androidx.fragment:fragment-ktx:$versions.fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycleVersion"
    implementation "androidx.room:room-runtime:$versions.roomVersion"
    implementation "androidx.room:room-ktx:$versions.roomVersion"
    kapt "androidx.room:room-compiler:$versions.roomVersion"
    testImplementation "androidx.arch.core:core-testing:$versions.archCompomentVersion"

    // binding
    implementation "com.github.skydoves:bindables:$versions.bindablesVersion"

    // startup
    implementation "androidx.startup:startup-runtime:$versions.startupVersion"

    // hilt
    implementation "com.google.dagger:hilt-android:$versions.hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$versions.hiltVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$versions.hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$versions.hiltVersion"

    // network
    implementation "com.github.skydoves:sandwich:$versions.sandwichVersion"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttpVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttpVersion"

    // moshi
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshiVersion"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutinesVersion"

    // whatIf
    implementation "com.github.skydoves:whatif:$versions.whatIfVersion"

    // glide
    implementation "com.github.bumptech.glide:glide:$versions.glideVersion"
    implementation "com.github.florent37:glidepalette:$versions.glidePaletteVersion"

    // bundler
    implementation "com.github.skydoves:bundler:$versions.bundlerVersion"

    // transformation
    implementation "com.github.skydoves:transformationlayout:$versions.transformationLayout"

    // recyclerView
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerView"
    implementation "com.github.skydoves:baserecyclerviewadapter:$versions.baseAdapter"
    // Debugging
    implementation "com.jakewharton.timber:timber:$versions.timberVersion"

}